{\rtf1\ansi\ansicpg1252\cocoartf1265\cocoasubrtf200
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid4}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720

\f0\b\fs26 \cf0 \ul \ulc0 Exercise 3: Numbers and Math
\b0 \ulnone \
Every programming language has some kind of way of doing numbers and math.\
\
This exercise has lots of math symbols. Let\'92s name them right away, so you know what they are called. As you type this one in, say the names. When saying them feels boring you can stop saying them. Here are the names:\
\

\b \ul Simplistic Explanation of\'a0Arithmetic Operators
\b0 \ulnone \

\b Order Of Operation: 
\b0 Before solving problems, remember there is an order the arithmetic should be solved in:\

\b B.O.D.M.A.S
\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720
\ls1\ilvl0
\b \cf0 {\listtext	\'95	}1. Brackets
\b0 \
\ls1\ilvl0
\b {\listtext	\'95	}2. Orders (Exponents - Powers, Roots)
\b0 \
\ls1\ilvl0
\b {\listtext	\'95	}3. Division and Multiplication (Left to right(Based on problem order)
\b0 \
\ls1\ilvl0
\b {\listtext	\'95	}4. Add & Subtract (Left to right(Based on problem order)
\b0 \
\pard\pardeftab720
\cf0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720
\ls2\ilvl0
\b \cf0 {\listtext	\'95	}+ plus \'a0 \'a0 \'a0
\b0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'97 Addition\
\ls2\ilvl0
\b {\listtext	\'95	}- minus \'a0 \'a0 
\b0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0\'97 Subtraction\
\ls2\ilvl0
\b {\listtext	\'95	}/ slash \'a0 \'a0 
\b0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0\'97 Division\
\ls2\ilvl0
\b {\listtext	\'95	}* asterisk \'a0 \'a0 \'a0
\b0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0\'97 Multiplication\
\ls2\ilvl0
\b {\listtext	\'95	}% percent \'a0 \'a0 \'a0 \'a0
\b0  \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0\'97 Modulo operations produce the remainder from the division of number (A) from number (B). 
\b Example
\b0  - 7%2 = 1 (3x2=6) 1 left over.\
\pard\tx220\tx720\pardeftab720\li720\fi-720
\ls3\ilvl0
\b \cf0 {\listtext	\'95	}< less-than \'a0 \'a0
\b0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'97Is A less than B- True or False.\
\ls3\ilvl0
\b {\listtext	\'95	}> greater-than 
\b0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'97Is A greater than B- True or False\
\ls3\ilvl0
\b {\listtext	\'95	}<= less-than-equa
\b0 l \'a0 \'a0 \'a0 \'a0 \'a0\'97Is A Less than Equal to B\uc0\u8232 (Is 2 less or equal to 3) - True Or False\
\ls3\ilvl0
\b {\listtext	\'95	}>=greater-than-equal 
\b0 \'a0 \'a0 \'a0\'97Is A Greater than or Equal to B\uc0\u8232 (Is 2 more or equal to 3) - True Or False\
\pard\pardeftab720
\cf0 \
\
\
\

\b \ul More detailed explanation of modulo
\b0 \ulnone \
\pard\tx220\tx720\pardeftab720\li720\fi-720
\ls4\ilvl0\cf0 {\listtext	\'95	}% percent \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0\'97 modulo operation yields the remainder from the division of the first argument by the second. The numeric arguments are first converted to a common type. The arguments may be floating point numbers.\'a0\uc0\u8232 
\b Example 1
\b0 \'a0
\b -\'a06%2 \'a0
\b0 evaluates (equals) to\'a0
\b 0
\b0 \'a0because there\'92s no remainder if\'a0
\b 6\'a0
\b0 is divided by 2 (3 times).\uc0\u8232 
\b Example 2 - 7%2\'a0
\b0 evaluates (equals) to\'a0
\b 1
\b0 \'a0because there is a remainder of\'a0
\b 1\'a0
\b0 if you divide 7 by 2(3 times).\
\pard\pardeftab720
\cf0 \'97\'97\'97\'97\

\b Modulo further explanation:
\b0 \

\b Example
\b0 : 27 / 16 = 1, remainder 11\
=> 27 Mod 16 = 11\
\

\b Example
\b0 : 35 / 3 = 11, remainder 2\
=> 35 mod 3 = 2\
\
\
\
\
Definition of\'a0
\b yield
\b0 \'a0= produce or provide\
Definition of\'a0
\b Arguments
\b0 \'a0= Different variables associated with a function\
\
\

\b \

\b0 \'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\

\b \ul Floating numbers - Explained easier\
\pard\pardeftab720

\b0 \cf0 \ulnone Good video to watch to get a grasp of the subject, Read notes, then watch, then read notes:\
{\field{\*\fldinst{HYPERLINK "https://www.youtube.com/watch?v=PZRI1IfStY0"}}{\fldrslt 
\b \ul https://www.youtube.com/watch?v=PZRI1IfStY0}}\
Floating Numbers, are similar to scientific notation\
\
However instead of working in 
\b base 10
\b0  (1.10.100.1000).It works in 
\b base 2 
\b0 = 4,2,1,1/2,1/4,1/8, due to this writing certain numbers causes repetition till the max digit the computer can store (usually 23), at which point it ends and lacks the ability to round up, so it leaves a small amount from the complete total, such as 2.999.. or 3.0001.\
\
\pard\pardeftab720

\b \cf0 \ul Example in action
\b0 \ulnone \

\b Base 10 = 
\b0 100\'92s, 10\'92s, 1\'92s , 1/10 1/100, 1/1000\

\b (
\b0 hundreds, tens, one\'92s
\b )
\b0 . 
\b (
\b0 1 tenth, 1 hundredth, 1 thousandth
\b )
\b0 .\
\

\b Base 2 = 
\b0 4, 2, 1, 1/2, 1/4, 1/8, 1/16\

\b (
\b0 4\'92s, 2\'92s, 1\'92s
\b )\'a0
\b0 \'a0
\b (
\b0 halves, quarters, eighths,sixteenths
\b )
\b0 \

\b \

\b0 In 
\b Base (10)-
\b0 \'a00.1 is written as \'a00.1\
In 
\b Base (2)
\b0 \'a0
\b - 
\b0 0.1 is written as 0.00011011\

\b \
Base 10 - 
\b0 0.1
\b  = 0.1
\b0 \

\b Base 2 = 
\b0 0.1 = 
\b 0.00011
\b0 (recurring ) = 
\b 0.0001100110011
\b0 \

\b \

\b0 \'97\'a0\
In 
\b Base (10) - 
\b0 1/3 (One third) is written as:\
1\'92s \'a0- 1/10\'92s - 1/100\'92s - 1/1000\'92s (ones, tenths.. ) \'a0 \'a0 \'a0 \'a0\'a0\
\'a00 \'a0 \'a0. \'a0 \'a03 \'a0 \'a0 \'a0 \'a0 \'a0 \'a03 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a03\'85\'85\'85..\
\
In 
\b Base (10) 
\b0 if a human has 1/3r + 1/3r + 1/3r = 
\b 1 (0.99999)
\b0 \
In 
\b Base(10) 
\b0 if a computer has 1/3r + 1/3r+ 1/3r =\'a0\
// It will add 0.333(till max) + 0.333(till max) +0.333(till max)= 
\b 0.99999
\b0 (till max)\
\
\
In 
\b Base(2) (robot)
\b0 - 1/10 = 0.000110011(till max digits- 
\b 23
\b0 ) \'a0+ 2/10 = 0.001100110011 (till max digits-\'a0
\b 23
\b0 ). = 1/10 + 2/10 Does not quite equal 3/10.\
\
\
This is not an issue for most things, because they do not a precision to the 23\'92rd digit. However when it comes to things like currency, where 10p + 20p (1/10 of a pound)+(2/10 of a pound), the computer outputs something like 0.300000001. Now there is an issue.\
\
To solve you would - Decimal type, store everything as integer, such as pence of cents and divide by 100 at the end.\
}