{\rtf1\ansi\ansicpg1252\cocoartf1265\cocoasubrtf200
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue233;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720

\f0\b\fs26 \cf0 \ul \ulc0 Exercise 6 - Strings And Text
\b0 \ulnone \
While you have been writing strings, you still do not know what they do. In this exercise we create a bunch of variables with complex strings so you can see what they are for. First an explanation of strings.\
\
A string is usually a bit of text you want to display to some, or \'93export\'94 out of the program you are writing. Python knows you want something to be a string when you put either \'93 (double-quotes) or \'91 (single quotes) around the text. You saw this many times with your use of 
\b print 
\b0 when you put the text you want to go to the string inside \'93 or \'91 after the 
\b print.\'a0
\b0 \

\b \

\b0 Strings may contain the format characters you have discovered so far. You simply put the 
\b formatted variables in
\b0  the
\b  string
\b0 , and then a 
\b % (percent)
\b0  character, 
\b followed
\b0  by the 
\b variable
\b0 . The 
\i\b only 
\i0\b0 catch is that if you want 
\b multiple formats
\b0  in your 
\b string
\b0  to 
\b print multiple variables
\b0 , you need to put them 
\b inside \'a0 \'a0( \'a0)
\b0  
\b (parenthesis)
\b0  separated by 
\b , (commas)
\b0 . It\'92s as if you were telling me to buy you a list of items from the store and you said, \'93I want milk, eggs, bread, and soup\'94, only as a programmer we say, \'93
\b (milk, eggs, bread, soup)
\b0 \'94.\

\b \

\b0 We will now 
\b type
\b0  in a whole bunch of 
\b strings
\b0 , 
\b variables
\b0 ,
\b  formats 
\b0 and print them. You will also
\b  practice
\b0  using short 
\b abbreviated names
\b0 . Programmers love 
\b saving
\b0  themselves 
\b time
\b0  at your expense by using annoying 
\b cryptic names
\b0 , so let\'92s get you started being able to 
\b read
\b0  them 
\b early on
\b0 .\
\
\'97\'97\'97\'97\

\b \ul Exercises\'a0
\b0 \ulnone \
Code for them\'a0\
\pard\tx220\tx720\pardeftab720\li720\fi-720
\ls1\ilvl0\cf2 {\listtext	\'95	}{\field{\*\fldinst{HYPERLINK "http://pastebin.com/Gn9Kfi5a"}}{\fldrslt \ul http://pastebin.com/Gn9Kfi5a}}\cf0 \
}